Algorithm Design

First the algorithm assigns a compatibility rating to each possible pair of students. It works like a par system in golf. 
Since all the options are numerical or can be converted to numbers (horrible, bad neutral, good, great – 1, 2, 3, 4, 5). 
So if somebody is looking for a 2-3, then another person will get +0 from 2-3. A 4 or a 1 will get +1, and 5 will get +2. 
The lower the compatibility rating is, the better the compatibility. From there it checks the team size of the current project. 
It will then organize teams in a way that no team will have too low of a score. 
First by getting the best ratings and pairing them in the order the students are sorted in. 
It will go top down, assigning partners at first glance, then sort the pairs by rating. 
Then, if scores on the lower end are too low it finds the higher ratings for those students whose scores are too low, 
and regenerates teams as is and sorts again. It always records the worst compatibility rating, so if that rating doesn’t 
improve too much after about 3 more runs, it will leave the teams as is. Once it generates pairs, it can account for team sizes. 
Any team size can be generated by any number of pairs if even, and the same plus one more person if odd. It assigns pairs with 
pairs in a similar way it assigns regular students, by making a compatibility rating between pairs. It then does the same thing 
it does for pairs.
